/*
 * This is Example 5-11 for 4 MHz clock 
 */

#include <p18cxxx.h>
#include <delays.h> 

/* Set configuration bits
 *  - set HS oscillator
 *  - disable watchdog timer
 *  - disable low voltage programming
 */

#pragma config OSC = HS
#pragma config WDT = OFF
#pragma config LVP = OFF

// program memory lookup tables

rom near char Morse_L[] =
{
	0x42, 0x84, 0xa4, 0x83, 0x01,
	0x24, 0xc3, 0x04, 0x02, 0x74,
	0xa3, 0x44, 0xc2, 0x80, 0xe3,
	0x64, 0xd4, 0x43, 0x03, 0x81,
	0x23, 0x14, 0x63, 0x94, 0xb4,
	0xc4
};

rom near char Morse_N[] =
{
	0xfd, 0x7d, 0x3d, 0x1d, 0x0d,
	0x05, 0x85, 0xc5, 0xe5, 0xf5 
};

// functions

void sendDitDah( char pattern )		// send Morse character
{
	int a;
	int count = pattern & 7;
	for ( a = 0; a < count & 7; a ++ )
	{
		PORTB = 1;			// key on

		if ( ( pattern & 0x80 ) )	// check bit
			Delay1KTCYx( 72 );	// dah
		else
			Delay1KTCYx( 24); 	// dit

 		PORTB = 0;			// key off
		Delay1KTCYx( 24 );		// waste a dit
		pattern <<= 1; 		// get next bit
	}
	Delay1KTCYx( 48 );			// waste 2 more dits
}


void sendChar( char sendData )
{

	
	if ( sendData >= 'a' && sendData <= 'z' )
		sendData -= 0x20;		// make uppercase

	if ( sendData == ' ' )		// if space
		Delay1KTCYx( 96 );		// wait 96 ms

	else if ( sendData >= 'A' && sendData <= 'Z' )
		sendDitDah( Morse_L[ sendData - 0x41 ] );

	else if ( sendData >= '0' && sendData <= '9')
		sendDitDah( Morse_N[ sendData - 0x30 ] );
}

// main program to test the sendChar function

void main (void)
{
	int a;

	ADCON1 = 0x7F;	// configure PORTS A and B as digital
				// 	this might need to be changed depending 
				// 	on the microcontroller version.

	TRISB = 0x00;		// configure Port B as output
	
	for ( a = 0; a < 26; a++ )
		sendChar( 'a' + a );	// test sendChar	

}
