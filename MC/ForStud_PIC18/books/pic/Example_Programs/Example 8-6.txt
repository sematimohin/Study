void CPICCDlg::OnBnClickedButton1()	// connect button
{
	int temp;
	CString message;
	WriteComPort( "COM1", "C" );	// send a "C"
	temp = ReadByte( "COM1" );		// read a byte from PIC
	while ( temp != 13 )		// look for return
	{
		message += ( char )temp;
		temp = ReadByte( "COM1" );	// next byte
	}
	List1.AddString( message );	// put it into the list box
}


void CPICCDlg::OnBnClickedButton2()	// goodbye button
{
	int temp;
	CString message;
	WriteComPort( "COM1", "G" );	// send a "G"
	temp = ReadByte( "COM1" );		// read a byte from PIC
	while ( temp != 13 )		// look for return
	{
		message += ( char )temp;
		temp = ReadByte( "COM1" );	// next byte
	}
	List1.AddString( message );	// put it into the list box
}

bool CPICCDlg::WriteComPort(CString PortSpecifier, CString Data)
{
	DCB dcb;
	DWORD byteswritten;
	HANDLE hPort = CreateFile(
		PortSpecifier,
		GENERIC_WRITE,
		0,
		NULL,
		OPEN_EXISTING,
		0,
		NULL
	);
	if (!GetCommState(hPort,&dcb))
		return false;
	dcb.BaudRate = CBR_9600; 			//9600 Baud
	dcb.ByteSize = 8; //8 data bits
	dcb.Parity = NOPARITY; //no parity
	dcb.StopBits = ONESTOPBIT; //1 stop
	if (!SetCommState(hPort,&dcb))
		return false;
	bool retVal = WriteFile(hPort,Data,1,&byteswritten,NULL);
	CloseHandle(hPort); //close the handle
	return retVal;
}


int CPICCDlg::ReadByte(CString PortSpecifier)
{
	DCB dcb;
	int retVal;
	BYTE Byte;
	DWORD dwBytesTransferred;
	DWORD dwCommModemStatus;
	HANDLE hPort = CreateFile(
		PortSpecifier,
		GENERIC_READ,
		0,
		NULL,
		OPEN_EXISTING,
		0,
		NULL
	);
	if (!GetCommState(hPort,&dcb))
		return 0x100;
	dcb.BaudRate = CBR_9600; //9600 Baud
	dcb.ByteSize = 8; //8 data bits
	dcb.Parity = NOPARITY; //no parity
	dcb.StopBits = ONESTOPBIT; //1 stop
	if (!SetCommState(hPort,&dcb))
		return 0x100;
	SetCommMask (hPort, EV_RXCHAR | EV_ERR);	//receive character 
	WaitCommEvent (hPort, &dwCommModemStatus, 0); 	//wait for char
	if (dwCommModemStatus & EV_RXCHAR)
		ReadFile (hPort, &Byte, 1, &dwBytesTransferred, 0); //read 1
	else if (dwCommModemStatus & EV_ERR)
		retVal = 0x101;
	retVal = Byte;
	CloseHandle(hPort);
	return retVal;
}

